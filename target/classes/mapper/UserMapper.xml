<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hxzy.mapper.UserMapper">
	
	<resultMap type="user" id="UserResultMap">
		<!-- 
			指定列名和属性名
			column:数据库列名
			property:java bean属性名
		 -->
		 
		 <!-- 指定主键 -->
		<id column="id" property="id"/>
		<result column="username" property="username"/>
		<result column="birthday" property="birthday"/>
		<result column="sex" property="sex"/>
		<result column="address" property="address"/>
	</resultMap>
	
	<!-- 
		resultType:映射为java配置的类型
		resultMap：映射为自定义的resultMap中指定的类型
	 -->
	<select id="queryOne" resultMap="UserResultMap">
		select * from user where id = #{id}
	</select>

	<!-- 
		parameterType：指定执行的sql语句的参数类型
	 -->
	<insert id="add" parameterType="user">
		<!-- 
			将插入的主键返回到user对象中 
			SELECT LAST_INSERT_ID()  :得到刚insert插入数据的主键值。只适用于主键自增长的列
			keyProperty:将查询得到的主键设置到parameterType对象中哪个属性中
			order: BEFORE，在执行插入前执行。  AFTER，在执行了插入后执行sql
			resultType:指定返回的id的结果类型
		-->
		<selectKey keyProperty="id" order="AFTER" resultType="Integer">
			SELECT LAST_INSERT_ID()
		</selectKey>
		
	
		insert into user (
			username,
			birthday,
			sex,
			address,
		)
		values (
			#{username},
			#{birthday},
			#{sex},
			#{address},
		)
	</insert>
	
</mapper>